// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('CT_TesteGeral1', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('CT_TesteGeral1', async function() {
    // Test name: CT_TesteGeral1
    // Step # | name | target | value
    // 1 | open | https://leitura.com.br/index.php?route=checkout/cart | 
    await driver.get("https://leitura.com.br/index.php?route=checkout/cart")
    // 2 | setWindowSize | 1347x731 | 
    await driver.manage().window().setRect({ width: 1347, height: 731 })
    // 3 | runScript | window.scrollTo(0,129.16665649414062) | 
    await driver.executeScript("window.scrollTo(0,129.16665649414062)")
    // 4 | click | name=quantity[1901005] | 
    await driver.findElement(By.name("quantity[1901005]")).click()
    // 5 | mouseOver | css=tr:nth-child(1) .btn-primary | 
    {
      const element = await driver.findElement(By.css("tr:nth-child(1) .btn-primary"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 6 | mouseOut | css=tr:nth-child(1) .btn-primary | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 7 | type | name=quantity[1901005] | 1
    await driver.findElement(By.name("quantity[1901005]")).sendKeys("1")
    // 8 | click | css=tr:nth-child(1) .btn-primary > .fa | 
    await driver.findElement(By.css("tr:nth-child(1) .btn-primary > .fa")).click()
    // 9 | click | name=quantity[1901022] | 
    await driver.findElement(By.name("quantity[1901022]")).click()
    // 10 | mouseOver | css=tr:nth-child(2) .btn-primary | 
    {
      const element = await driver.findElement(By.css("tr:nth-child(2) .btn-primary"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 11 | mouseOut | css=tr:nth-child(2) .btn-primary | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 12 | type | name=quantity[1901022] | 2
    await driver.findElement(By.name("quantity[1901022]")).sendKeys("2")
    // 13 | click | css=tr:nth-child(2) .btn-primary > .fa | 
    await driver.findElement(By.css("tr:nth-child(2) .btn-primary > .fa")).click()
    // 14 | click | css=.accordion-toggle > .fa | 
    await driver.findElement(By.css(".accordion-toggle > .fa")).click()
    // 15 | click | id=input-postcode | 
    await driver.findElement(By.id("input-postcode")).click()
    // 16 | type | id=input-postcode | 36774000
    await driver.findElement(By.id("input-postcode")).sendKeys("36774000")
    // 17 | click | id=button-quote | 
    await driver.findElement(By.id("button-quote")).click()
    // 18 | click | css=.radio:nth-child(3) input | 
    await driver.findElement(By.css(".radio:nth-child(3) input")).click()
    // 19 | click | name=shipping_method | 
    await driver.findElement(By.name("shipping_method")).click()
    // 20 | click | id=button-shipping | 
    await driver.findElement(By.id("button-shipping")).click()
    // 21 | click | linkText=Finalizar pedido | 
    await driver.findElement(By.linkText("Finalizar pedido")).click()
  })
})
