// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('CT_Carrinho de compra', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('CT_Carrinho de compra', async function() {
    // Test name: CT_Carrinho de compra
    // Step # | name | target | value
    // 1 | open | https://leitura.com.br/index.php?route=checkout/cart | 
    await driver.get("https://leitura.com.br/index.php?route=checkout/cart")
    // 2 | setWindowSize | 1347x731 | 
    await driver.manage().window().setRect({ width: 1347, height: 731 })
    // 3 | mouseOver | css=tr:nth-child(2) > .text-left .btn-danger | 
    {
      const element = await driver.findElement(By.css("tr:nth-child(2) > .text-left .btn-danger"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 4 | mouseOut | css=tr:nth-child(2) > .text-left .btn-danger | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 5 | mouseOver | css=tr:nth-child(2) .btn-primary | 
    {
      const element = await driver.findElement(By.css("tr:nth-child(2) .btn-primary"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 6 | mouseOut | css=tr:nth-child(2) .btn-primary | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 7 | click | name=quantity[1901003] | 
    await driver.findElement(By.name("quantity[1901003]")).click()
    // 8 | mouseOver | css=tr:nth-child(1) .btn-primary | 
    {
      const element = await driver.findElement(By.css("tr:nth-child(1) .btn-primary"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 9 | type | name=quantity[1901003] | 2
    await driver.findElement(By.name("quantity[1901003]")).sendKeys("2")
    // 10 | mouseOut | css=tr:nth-child(1) .btn-primary | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 11 | click | css=tr:nth-child(1) .btn-primary | 
    await driver.findElement(By.css("tr:nth-child(1) .btn-primary")).click()
    // 12 | click | name=quantity[1901005] | 
    await driver.findElement(By.name("quantity[1901005]")).click()
    // 13 | mouseOver | css=tr:nth-child(2) .btn-primary | 
    {
      const element = await driver.findElement(By.css("tr:nth-child(2) .btn-primary"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 14 | type | name=quantity[1901005] | 1
    await driver.findElement(By.name("quantity[1901005]")).sendKeys("1")
    // 15 | click | css=tr:nth-child(2) .btn-primary | 
    await driver.findElement(By.css("tr:nth-child(2) .btn-primary")).click()
    // 16 | mouseOut | css=tr:nth-child(2) .btn-primary | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 17 | click | linkText=Finalizar pedido | 
    await driver.findElement(By.linkText("Finalizar pedido")).click()
  })
})
